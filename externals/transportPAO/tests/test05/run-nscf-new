#!/bin/zsh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to use bands.x to check the band symmetry"
$ECHO "of Si "

# set the needed environment variables
#. ../../../../environment_variables
. /home/mcosta/compiling-composer_xe_2013.5.192/qe-6.0/environment_variables 

# required executables and pseudopotentials
BIN_LIST="pw.x bands.x"
#PSEUDO_LIST="Cu.pz-dn-rrkjus_psl.0.2.UPF"
PSEUDO_LIST="Fe.pbe-n-kjpaw_psl.1.0.0.UPF"

TMP_DIR="./"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done


# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE $NETWORK_PSEUDO/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
BANDS_COMMAND="$PARA_PREFIX $BIN_DIR/bands.x $PARA_POSTFIX"
PROJWFC_COMMAND="$PARA_PREFIX $BIN_DIR/projwfc.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x as: $PW_COMMAND"
$ECHO "  running bands.x as: $BANDS_COMMAND"
$ECHO


# DEFINITONS

prefix="fe"

n=200
k_init=0.00000
k_final=0.50000
dk="$(( ($k_final - $k_init)/$n))"
k="$(($n+1))"

for i in $(seq $k )
do

kpts="$((($i-1)*$dk))"

mkdir nscf-$kpts
cd  nscf-$kpts
cp -r ../../../scf/$prefix.* .


cat > $prefix.nscf.in << EOF
 &control
    calculation = 'nscf'
    restart_mode='from_scratch',
    prefix='fe',
    tprnfor = .true.
    pseudo_dir = '/home/mcosta/compiling-composer_xe_2013.5.192/qe-6.0/pseudo'
    outdir='./'
    verbosity = "high"
 /
 &system
    ibrav=  0, nat=  2, ntyp= 1,
    ecutwfc =45.0,
    ecutrho =300.0,
    occupations='smearing', smearing='methfessel-paxton', degauss=0.02
    noinv = .TRUE.
    nosym = .TRUE.
    nbnd = 20
/
 &electrons
    mixing_mode = 'plain'
    mixing_beta = 0.7
    conv_thr =  1.0d-8
 /
ATOMIC_SPECIES
 Fe  0.0 Fe.pbe-n-kjpaw_psl.1.0.0.UPF 
ATOMIC_POSITIONS crystal 
Fe 0.00000000  0.00000000  0.00000000
Fe 0.50000000  0.50000000  0.50000000
CELL_PARAMETERS (angstrom)
        2.8608000278         0.0000000000         0.0000000000
        0.0000000000         2.8608000278         0.0000000000
        0.0000000000         0.0000000000         2.8608000278  
K_POINTS crystal
4
0.000000 $kpts 0.000000 1.0
0.000000 $kpts 0.250000 1.0
0.000000 $kpts 0.500000 1.0
0.000000 $kpts 0.750000 1.0
EOF

$ECHO "  running the non-scf calculation for $prefix...\c"
$PW_COMMAND < $prefix.nscf.in > $prefix.nscf.out
check_failure $?
$ECHO " done"


################# PROJECTIONS #####################
cat > $prefix.proj.in << EOF
 &projwfc
    prefix='$prefix'
    outdir='./'
    filpdos='./$prefix'
    lwrite_overlaps = .false.
    lbinary_data  = .false.
 /
EOF
$PROJWFC_COMMAND < $prefix.proj.in > $prefix.proj.out
cd ..
done
